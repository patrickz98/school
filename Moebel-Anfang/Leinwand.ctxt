#BlueJ class context
comment0.params=
comment0.target=Leinwand\ gibLeinwand()
comment0.text=\n\ Fabrikmethode,\ die\ eine\ Referenz\ auf\ das\ einzige\ Exemplar\n\ dieser\ Klasse\ zur\uFFFDckliefert.\ Wenn\ es\ von\ einer\ Klasse\ nur\n\ genau\ ein\ Exemplar\ gibt,\ wird\ dieses\ als\ 'Singleton'\n\ bezeichnet.\n
comment1.params=titel\ breite\ hoehe\ grundfarbe
comment1.target=Leinwand(java.lang.String,\ int,\ int,\ java.awt.Color)
comment1.text=\n\ Erzeuge\ eine\ Leinwand.\n\ @param\ titel\ \ Titel,\ der\ im\ Rahmen\ der\ Leinwand\ angezeigt\ wird\n\ @param\ breite\ \ die\ gew\uFFFDnschte\ Breite\ der\ Leinwand\n\ @param\ hoehe\ \ die\ gew\uFFFDnschte\ H\uFFFDhe\ der\ Leinwand\n\ @param\ grundfarbe\ die\ Hintergrundfarbe\ der\ Leinwand\n
comment10.params=figur\ farbe\ shape
comment10.target=void\ zeichne(java.lang.Object,\ java.lang.String,\ java.awt.Shape)
comment10.text=\n\ Zeichne\ f\uFFFDr\ das\ gegebene\ Figur-Objekt\ eine\ Java-Figur\ (einen\ Shape)\n\ auf\ die\ Leinwand.\n\ @param\ \ figur\ \ das\ Figur-Objekt,\ f\uFFFDr\ das\ ein\ Shape\ gezeichnet\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ werden\ soll\n\ @param\ \ farbe\ \ die\ Farbe\ der\ Figur\n\ @param\ \ shape\ \ ein\ Objekt\ der\ Klasse\ Shape,\ das\ tats\uFFFDchlich\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ gezeichnet\ wird\n
comment11.params=figur
comment11.target=void\ entferne(java.lang.Object)
comment11.text=\n\ Entferne\ die\ gegebene\ Figur\ von\ der\ Leinwand.\n\ @param\ \ figur\ \ die\ Figur,\ deren\ Shape\ entfernt\ werden\ soll\n
comment12.params=farbname
comment12.target=void\ setzeZeichenfarbe(java.lang.String)
comment12.text=\n\ Setze\ die\ Zeichenfarbe\ der\ Leinwand.\n\ @param\ \ farbname\ der\ Name\ der\ neuen\ Zeichenfarbe.\n
comment13.params=millisekunden
comment13.target=void\ warte(int)
comment13.text=\n\ Warte\ f\uFFFDr\ die\ angegebenen\ Millisekunden.\n\ Mit\ dieser\ Operation\ wird\ eine\ Verz\uFFFDgerung\ definiert,\ die\n\ f\uFFFDr\ animierte\ Zeichnungen\ benutzt\ werden\ kann.\n\ @param\ \ millisekunden\ die\ zu\ wartenden\ Millisekunden\n
comment14.params=
comment14.target=void\ erneutZeichnen()
comment14.text=\n\ Zeichne\ erneut\ alle\ Figuren\ auf\ der\ Leinwand.\n
comment15.params=
comment15.target=void\ loeschen()
comment15.text=\n\ L\uFFFDsche\ die\ gesamte\ Leinwand.\n
comment2.params=e
comment2.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment3.params=e
comment3.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment4.params=e
comment4.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment5.params=e
comment5.target=void\ mouseExited(java.awt.event.MouseEvent)
comment6.params=e
comment6.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment7.params=e
comment7.target=void\ mousePressed(java.awt.event.MouseEvent)
comment8.params=e
comment8.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment9.params=sichtbar
comment9.target=void\ setzeSichtbarkeit(boolean)
comment9.text=\n\ Setze,\ ob\ diese\ Leinwand\ sichtbar\ sein\ soll\ oder\ nicht.\ Wenn\ die\n\ Leinwand\ sichtbar\ gemacht\ wird,\ wird\ ihr\ Fenster\ in\ den\n\ Vordergrund\ geholt.\ Diese\ Operation\ kann\ auch\ benutzt\ werden,\ um\n\ ein\ bereits\ sichtbares\ Leinwandfenster\ in\ den\ Vordergrund\ (vor\n\ andere\ Fenster)\ zu\ holen.\n\ @param\ sichtbar\ boolean\ f\uFFFDr\ die\ gew\uFFFDnschte\ Sichtbarkeit\:\n\ true\ f\uFFFDr\ sichtbar,\ false\ f\uFFFDr\ nicht\ sichtbar.\n
numComments=16
